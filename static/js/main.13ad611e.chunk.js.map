{"version":3,"sources":["images/logo.svg","components/Header.js","images/edit_button.svg","images/add_button.svg","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","images/close_icon.svg","components/PopupWithForm.js","components/ImagePopup.js","utils/api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","CurrentUserContext","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","isLiked","likes","some","i","cardLikeButtonClassName","type","onClick","onCardDelete","link","onCardClick","name","onCardLike","length","Main","style","backgroundImage","avatar","onEditAvatar","onEditProfile","editBtn","about","onAddPlace","addBtn","cards","map","item","Footer","PopupWithForm","isOpen","onClose","closeIcon","title","onSubmit","novalidate","children","button","ImagePopup","content","api","baseUrl","headers","this","_baseUrl","_headers","endPoint","method","body","fetch","then","res","ok","json","console","log","err","Promise","reject","status","_makeRequest","JSON","stringify","cardId","authorization","EditProfilePopup","useState","setName","description","setDescription","useEffect","e","preventDefault","onUpdateUser","id","value","onChange","target","required","placeholder","minlength","maxlength","EditAvatarPopup","avatarRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","nameRef","linkRef","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","getInitialCards","initialCards","catch","getProfile","userData","closeAllPopups","Provider","like","newCard","newCards","c","deleteCard","filter","user","editProfile","result","createCard","updateAvatar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13ad611e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.a307e1c4.svg\";","import logo from '../images/logo.svg';\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <img src={logo} alt=\"лого\" className=\"header__logo\"/>\n    </header>\n  );\n}\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/edit_button.8667ac4a.svg\";","export default __webpack_public_path__ + \"static/media/add_button.d86bb2ed.svg\";","import {createContext} from 'react';\n\nexport const CurrentUserContext = createContext();","import { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { useContext } from 'react';\n\nconst Card = (props) => {\n  const currentUser = useContext(CurrentUserContext);\n  const isOwn = props.card.owner._id === currentUser._id;\n  const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n  const cardLikeButtonClassName = `element__like-button ${ isLiked ? 'element_liked' : ''}`; \n\n  function handleClick() {\n    props.onCardClick(props.card);\n  }\n\n  function handleLikeClick() {\n    props.onCardLike(props.card);\n  }\n\n  function handleDeleteClick() {\n    props.onCardDelete(props.card);\n  }\n\n\n  return (\n    <div className=\"element\">\n      {isOwn && <button type=\"button\" className=\"element__trash-button\" onClick={handleDeleteClick}></button>}\n      <img src={props.card.link} alt='карточка' className=\"element__image\" onClick={handleClick}/>\n      <div className=\"element__wrapper\">\n      <h2 className=\"element__title\">{props.card.name}</h2>\n        <div>\n          <button type=\"button\" className={cardLikeButtonClassName}onClick={handleLikeClick}></button>\n          <p className=\"element__likes\">{props.card.likes.length}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;","import editBtn from '../images/edit_button.svg';\nimport addBtn from '../images/add_button.svg';\nimport { useContext } from 'react';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nconst Main = (props) => {\n  const currentUser = useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content\">\n      { currentUser && <section className=\"profile\">\n        <div className=\"profile__info\">\n          <div style={{ backgroundImage: `url(${currentUser.avatar})`}} className=\"profile__avatar\" onClick={props.onEditAvatar}>\n            <img alt=\"аватар\" className=\"profile__avatar-edit\"/>\n          </div>\n          <div className=\"profile__text\">\n            <div className=\"profile__row\">\n              <h1 className=\"profile__title\">{currentUser.name}</h1>\n              <button type=\"button\" className=\"profile__edit-button\" onClick={props.onEditProfile}><img className=\"profile__edit-button-img\" src={editBtn} alt=\"кнопка редактировать\"/></button>\n            </div>\n            <p className=\"profile__subtitle\">{currentUser.about}</p>\n          </div>\n        </div>\n        <button type=\"button\" className=\"profile__add-button\" onClick={props.onAddPlace}>\n          <img className=\"profile__add-button-img\" src={addBtn} alt=\"кнопка добавить\"/>\n        </button>\n      </section>}\n      <section className=\"elements\">\n        {props.cards.map((item) => {\n          return (\n            <Card\n              card={item}\n              onCardClick={props.onCardClick}\n              onCardLike={props.onCardLike}\n              onCardDelete={props.onCardDelete}\n              key={item._id}\n            />\n          )\n        })}\n      </section>\n    </main>\n  );\n}\n\nexport default Main;","const Footer = () => {\n  return (\n      <footer className=\"footer\">\n        <p className=\"footer__copyright\">© 2020 Mesto Russia</p>\n      </footer>\n  );\n}\n\nexport default Footer;","export default __webpack_public_path__ + \"static/media/close_icon.118074ba.svg\";","import closeIcon from '../images/close_icon.svg';\n\nconst PopupWithForm = (props) => {\n  return (\n    <section className={`popup popup_type_${props.name} ${props.isOpen ? 'popup_is-opened' : ''}`}>\n      <div className=\"popup__container\">\n        <button type=\"button\" className=\"popup__close\" onClick={props.onClose}>\n          <img src={closeIcon} alt=\"кнопка закрыть\" className=\"popup__close-img\"/>\n        </button>\n        <h2 className=\"popup__form-title\">{props.title}</h2>\n        <form onSubmit={props.onSubmit} className=\"popup__form\" name={`${props.name}Form`} novalidate>\n          {props.children}\n          <button type=\"submit\" className=\"popup__button\">{props.button}</button>  \n        </form>\n      </div>\n    </section>\n  );\n}\n\nexport default PopupWithForm;","import closeIcon from '../images/close_icon.svg';\n\nconst ImagePopup = (props) => {\n\n  return (\n    <section className={`popup popup_type_image ${ props.card ? 'popup_is-opened' : ''}`}>\n      <div className=\"popup__container popup__container_img\">\n        <button type=\"button\" className=\"popup__close\" onClick={props.onClose}>\n          <img src={closeIcon} alt=\"кнопка закрыть\" className=\"popup__close-img\"/>\n        </button>\n        <img className=\"full-img\" alt=\"картинка\" style={{content: `url(${props.card ? props.card.link : ''})`}}/>\n        <h3 className=\"img-title\">{props.card && props.card.name}</h3>\n      </div>\n    </section>\n  );\n};\n\nexport default ImagePopup;","class Api {\n  constructor({baseUrl, headers}) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _makeRequest(endPoint, method='GET', body) {\n    return fetch(this._baseUrl + endPoint, {\n      method,\n      headers: this._headers,\n      body\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n        \n        // если ошибка, отклоняем промис\n        console.log(res.err);\n        return Promise.reject(`Ошибка: ${res.status}`);\n      });\n  }\n\n  getProfile() {\n    return this._makeRequest('/users/me');\n  }\n\n  getInitialCards() {\n    return this._makeRequest('/cards');\n  }\n\n  // PATCH https://mesto.nomoreparties.co/v1/cohortId/users/me\n  editProfile({name, about}) {\n    return this._makeRequest(\n      '/users/me',\n      'PATCH',\n      JSON.stringify({\n        name,\n        about\n      })\n    )\n  }\n \n  // POST https://mesto.nomoreparties.co/v1/cohortId/cards\n  createCard(card) {\n    return this._makeRequest(\n      '/cards',\n      'POST',\n      JSON.stringify(card))\n  }\n\n  // DELETE https://mesto.nomoreparties.co/v1/cohortId/cards/cardId\n  deleteCard(cardId) {\n    return this._makeRequest('/cards/' + cardId, 'DELETE')\n  }\n\n  // DELETE https://mesto.nomoreparties.co/v1/cohortId/cards/likes/cardId \n  // PUT https://mesto.nomoreparties.co/v1/cohortId/cards/likes/cardId \n  like(cardId, isLiked) {\n    return this._makeRequest('/cards/likes/' + cardId, isLiked ? 'DELETE' : 'PUT');\n  }\n\n  // PATCH https://mesto.nomoreparties.co/v1/cohortId/users/me/avatar \n  updateAvatar(avatar) {\n    return this._makeRequest('/users/me/avatar', 'PATCH', JSON.stringify(avatar));\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-17',\n  headers: {\n    authorization: 'd0e1e3a1-2328-401d-87db-610b930721e8',\n    'Content-Type': 'application/json'\n  }\n});\n\nexport default api;","import { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { useContext, useState, useEffect } from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nconst EditProfilePopup = (props) => {\n  const currentUser = useContext(CurrentUserContext);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleDescriptionChange(e) {\n    setDescription(e.target.value);\n  }\n\n  useEffect(() => {\n    if (currentUser) {\n      setName(currentUser.name);\n      setDescription(currentUser.about);\n    }\n  }, [currentUser]);\n  \n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    props.onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      title='Редактировать профиль'\n      name='edit'\n      button='Сохранить'\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n    >\n      <input id=\"name\" value={name} onChange={handleNameChange} required type=\"text\" className=\"popup__input popup__input_type_name\" placeholder=\"Имя\" name=\"name\" minlength=\"2\" maxlength=\"40\"/>\n      <span className='popup__error' id='name-error'></span>\n      <input id=\"about\" value={description} onChange={handleDescriptionChange} required type=\"text\" className=\"popup__input popup__input_type_job\" placeholder=\"Род деятельности\" name=\"job\" minlength=\"2\" maxlength=\"200\"/>\n      <span className='popup__error' id='about-error'></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;","import PopupWithForm from './PopupWithForm';\nimport { useRef } from 'react';\n\nconst EditAvatarPopup = (props) => {\n  const avatarRef = useRef();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n  \n    props.onUpdateAvatar({\n      avatar: avatarRef.current.value,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      title='Обновить аватар'\n      name='avatar'\n      button='Создать'\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n    >\n      <input ref={avatarRef} id=\"link_input\" type=\"url\" required className=\"popup__input\" placeholder=\"Ссылка на картинку\" name=\"img-link\"/>\n      <span className='popup__error' id='link_input-error'></span>\n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup;","import PopupWithForm from './PopupWithForm';\nimport { useRef } from 'react';\n\nconst AddPlacePopup = (props) => {\n  const nameRef = useRef();\n  const linkRef = useRef();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n  \n    props.onAddPlace({\n      name: nameRef.current.value,\n      link: linkRef.current.value\n    });\n  }\n\n  return (\n    <PopupWithForm\n      title='Новое место'\n      name='create'\n      button='Создать'\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n    >\n      <input ref={nameRef} id=\"title-input\" type=\"text\" required className=\"popup__input\" placeholder=\"Название\" name=\"name\" minlength=\"2\" maxlength=\"40\"/>\n      <span className='popup__error' id='title-input-error'></span>\n      <input ref={linkRef} id=\"link-input\" type=\"url\" required className=\"popup__input\" placeholder=\"Ссылка на картинку\" name=\"img-link\"/>\n      <span className='popup__error' id='link-input-error'></span>\n    </PopupWithForm>\n  )\n}\n\nexport default AddPlacePopup;","import Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport { useState, useEffect } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [cards, setCards] = useState([]);\n  \n  useEffect(() => {\n    api.getInitialCards()\n      .then((initialCards) => {\n        setCards(initialCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [])\n\n  useEffect(() => {\n    api.getProfile()\n      .then((userData) => {\n        setCurrentUser(userData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [])\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    \n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.like(card._id, isLiked)\n      .then((newCard) => {\n        // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        // Обновляем стейт\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });;\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n      .then(() => {\n        const newCards = cards.filter(item => item._id !== card._id);\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.log(err); // выведем ошибку в консоль\n      });\n  }\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  const closeAllPopups = () => {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n  }\n\n  const handleUpdateUser = (user) => {\n    api.editProfile(user)\n      .then((result) => {\n        setCurrentUser(result);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleAddPlaceSubmit(card) {\n    api.createCard(card)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  const handleUpdateAvatar = (avatar) => {\n    api.updateAvatar(avatar)\n      .then((result) => {\n        setCurrentUser(result);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"App\">\n        <Header/>\n        <Main\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick}\n          onCardClick={handleCardClick}\n          cards={cards}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n        />\n        <Footer/>\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit}/>\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar}/> \n        <PopupWithForm\n          title='Вы уверены ?'\n          name='submit'\n          button='Да'\n        >\n        </PopupWithForm>\n        <ImagePopup\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />    \n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}